// Generated by view binder compiler. Do not edit!
package com.example.compras.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.compras.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HolderRecycleLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView image;

  @NonNull
  public final RelativeLayout layout;

  @NonNull
  public final TextView notation;

  @NonNull
  public final TextView textmarca;

  @NonNull
  public final TextView textnome;

  @NonNull
  public final TextView textqnt;

  private HolderRecycleLayoutBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView image,
      @NonNull RelativeLayout layout, @NonNull TextView notation, @NonNull TextView textmarca,
      @NonNull TextView textnome, @NonNull TextView textqnt) {
    this.rootView = rootView;
    this.image = image;
    this.layout = layout;
    this.notation = notation;
    this.textmarca = textmarca;
    this.textnome = textnome;
    this.textqnt = textqnt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HolderRecycleLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HolderRecycleLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.holder_recycle_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HolderRecycleLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.layout;
      RelativeLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.notation;
      TextView notation = ViewBindings.findChildViewById(rootView, id);
      if (notation == null) {
        break missingId;
      }

      id = R.id.textmarca;
      TextView textmarca = ViewBindings.findChildViewById(rootView, id);
      if (textmarca == null) {
        break missingId;
      }

      id = R.id.textnome;
      TextView textnome = ViewBindings.findChildViewById(rootView, id);
      if (textnome == null) {
        break missingId;
      }

      id = R.id.textqnt;
      TextView textqnt = ViewBindings.findChildViewById(rootView, id);
      if (textqnt == null) {
        break missingId;
      }

      return new HolderRecycleLayoutBinding((ConstraintLayout) rootView, image, layout, notation,
          textmarca, textnome, textqnt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
